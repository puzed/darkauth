name: Build and Publish Image

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4

      - id: repo
        run: echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo.outputs.name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=branch
            type=ref,event=pr

      - name: Build amd64
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
          platforms: linux/amd64
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=ghcr.io/${{ steps.repo.outputs.name }},name-canonical=true,push-by-digest=true

      - name: Write digest file
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        run: echo "${{ steps.build.outputs.digest }}" > digest.txt

      - name: Upload digest
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/upload-artifact@v4
        with:
          name: digest-amd64
          path: |
            digest.txt

  build-arm64:
    runs-on: ubuntu-24.04-arm
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4

      - id: repo
        run: echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo.outputs.name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=branch
            type=ref,event=pr

      - name: Build arm64
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
          platforms: linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=ghcr.io/${{ steps.repo.outputs.name }},name-canonical=true,push-by-digest=true

      - name: Write digest file
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        run: echo "${{ steps.build.outputs.digest }}" > digest.txt

      - name: Upload digest
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        uses: actions/upload-artifact@v4
        with:
          name: digest-arm64
          path: |
            digest.txt

  manifest:
    needs: [build-amd64, build-arm64]
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: repo
        run: echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo.outputs.name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            type=ref,event=branch
            type=ref,event=pr

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digest-*
          path: ./digests

      - name: Create and push manifest
        run: |
          AMD64_DIGEST=$(cat digests/digest-amd64/digest.txt)
          ARM64_DIGEST=$(cat digests/digest-arm64/digest.txt)
          for TAG in ${TAGS}; do
            docker buildx imagetools create \
              -t "$TAG" \
              "${IMAGE}@${AMD64_DIGEST}" \
              "${IMAGE}@${ARM64_DIGEST}"
          done
        env:
          IMAGE: ghcr.io/${{ steps.repo.outputs.name }}
          TAGS: ${{ steps.meta.outputs.tags }}
